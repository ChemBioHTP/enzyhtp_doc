===========================================================
Geometry: Molecular Dynamics Parameter and Parameterizer
===========================================================

Briefs
==============================================

This module, named ``enzy_htp._interface.handle_types.mol_dyn_parameterizer``, defines the interface of 
``MolDynParameterizer`` and ``MolDynParameter`` as abstract classes for Molecular Dynamics Simulation (hereinafter called **MD Simulation**).

In order to implement MD simulation, we need to apply the force fields to the complex, define to solvent box, etc.,
which is the so-called "parameterization". However, different MD engines have different parameterization requirements. 

Thus, we use concrete class of ``MolDynParameterizer`` and ``MolDynParameter`` for specific MD Simulation engines.

.. dropdown:: :fa:`eye,mr-1` Click to learn more about **MD Simulation engines**

    Currently, the only available engine for MD simulation is Amber. 
    
    Thus, the only concrete class of ``MolDynParameterizer`` at present is ``AmberParameterizer``.

Concrete Implementations of ``MolDynParameterizer``
=======================================================

AmberParameterizer
----------------------------------------------

This class is the MD simulation parameterizer for Amber. 

The recommended constructor of ``AmberParameterizer`` is ``enzy_htp._interface.amber_interface.AmberInterface.build_md_parameterizer``

Arguments for Constructor
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

``force_fields``
    The list of force fields used for parameterization in Amber tleap format (default: ["leaprc.protein.ff14SB", "leaprc.gaff", "leaprc.water.tip3p"])

    The argument `force_fields` should be a List[str] value or 'default', which is the only allowed string value for `force_fields`.

    (List[str], optional, default ``["leaprc.protein.ff14SB", "leaprc.gaff2", "leaprc.water.tip3p"]``)

``charge_method``
    The method used for determine the atomic charge.

    This method is applied to parameterization of ligand, modified AA, and metal binding site.

    (String, optional, default ``AM1BCC``)

``resp_engine`` (Works when ``charge_method="RESP"``.)
    The engine for calculating the RESP charge.

    (String, optional, default ``g16``)

``resp_lvl_of_theory`` (Works when ``charge_method="RESP"``.)
    The level of theory for calculating the RESP charge

    (String, optional, default ``b3lyp/def2svp em=d3``)

``ncaa_param_lib_path``
    The path of the non-CAA parameter library.
    
    This is where all generated NCAA (Non-Canonical Amino Acid) params goes to, which will prevent redundant generation of same NCAAs.

    (String, optional, default ``../ncaa_lib``, relative to the working directory)

    .. dropdown:: :fa:`eye,mr-1` Click to learn more about ``ncaa_param_lib_path``

        Normally we suggest setting this to a directory that contains all workflows of a same wild-type/template enzyme.
        * The NCAA-file correspondence is determined by

            1. 3-letter name in the file;
            2. The file name (if 1 not exist);

        * Setting this to a path that is too general may cause conflict when different NCAAs have the same name. 

        (e.g. Different tautomer or general res name like LIG)

``force_renew_ncaa_parameter``
    Whether force renew the parameter files (frcmod etc.) for all NCAAs (Ligands, Modified Amino Acids, or Metals)

    (Boolean, optional, default ``False``)

``ncaa_net_charge_engine``
    The engine the determines the net charge of NCAA if none is assigned in NCAA objects (Ligands, Modifed Residues, Metal Units)

    (String, optional, default ``PYBEL``)

``ncaa_net_charge_ph``
    The pH value used in determining the net charge of NCAA.

    (Float, optional, default ``7.0``)

``solvate_box_type``
    The shape of the solvation box.

    (String, optional, default ``oct``)

``solvate_box_size``
    The size of the solvation box (Unit: Angstrom).

    (Float, optional, default ``10.0``)

``gb_radii``
    The igb number - the effective GB radii used in the Generalized Born calculation.
    This will influence the GB radii in the prmtop file and are only used implicit solvent calculations.

    (Integer, optional, default ``None``)

``parameterizer_temp_dir``
    The temporary working directory that contains all the files generated by the AmberParameterizer.

    (String, optional, default ``__SCRATCH_DIR__/amber_parameterizer``)

    .. admonition:: About ``__SCRATCH_DIR__``

        ``__SCRATCH_DIR__`` is a directory for scratch use, which can be defined by yourselves.

``additional_tleap_lines``
    Handle for adding additional tleap lines before generating the parameters.

    (List[str], optional, default ``None``)


Examples
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The simpliest use of the constructor is as follows.

.. code:: python    

    from enzy_htp import interface
    amber_interface = interface.amber
                                
    param_method = amber_interface.build_md_parameterizer()

    type(param_method)  # <class 'enzy_htp._interface.amber_interface.AmberParameterizer'>

We can learn from the output that an ``AmberParameterizer`` instance has been constructed by ``build_md_parameterizer`` function.

Author: Zhong, Yinjie <yinjie.zhong@vanderbilt.edu>